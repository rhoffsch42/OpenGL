---- other			-------------------------------------------------------
float	(*Vector3::operation)(float,float);
	inline?	add/sub/etc
	compare execution speed, binary size
check if consructor of mother class is called when child is destroyed
similar constructors: make an init func ? with all common tasks
cash when sing same texture as another object ? or creating too many textures ?
---- memory/leaks	-------------------------------------------------------
delete data opengl:
	Skybox
	Blueprint and derived
	Program and derived
---- text formating	-------------------------------------------------------
void on all accessors ? https://stackoverflow.com/questions/20617067/returning-function-pointer-type
constructor copy, const X& src
references: type& varname;
class X { //brace here or next line
if (condition)//bad, braces should englobe code
	return ;
	[...]
public variables without underscore: _varname;
---- Main features	-------------------------------------------------------
class Object (cf obj3d.hpp, skybox.hpp, program.hpp and derived)
	class Program and derived: see SkyboxPG.hpp
	class skybox : public Object.
		+see SkyboxPG.hpp
motion behavior:
	generic: done
		/!\ cannot have several func, except by calling another at the end of a first one
	Obj3d dependent: need a virtual func
		/!\ altered variables need to be set as protected in Obj3d class
	What i want:
		Obj3d::runX Behaviors/scripts/modifiers/

		public:
		void	runX();
		bool	Xactivated;
		private:
		list<classX>	Xvar;//references,pointers,copys?
		//in render:
		{
			[...]
			if (this->_Xactivated)
				for (/*all list elements*/) {
					element->run();
				}
		}

		class X {
		public:
			X(var1, var2, var3, ...);
			[...]
			~X();
			void	run() {
				if (this->activated)
				// code depending on vars and settings
			}
			bool	activated;
		private:
			Fps &	var1;
			Obj3d &	var2;
			Cam &	var3;
			[...]
			float	setting1;
			float	setting2;
			[...]
		}

quaternions: https://www.youtube.com/watch?v=d4EgbgTm0Bg

---- GUI			-------------------------------------------------------
	Qt
