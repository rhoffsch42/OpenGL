---- other			-------------------------------------------------------
float	(*Vector3::operation)(float,float);
	inline?	add/sub/etc
	compare execution speed, binary size
check if destructor of mother class is called when child is destroyed
similar constructors: make an init func ? with all common tasks
---- memory/leaks	-------------------------------------------------------
delete data opengl:
	Skybox
	Blueprint and derived
	Program and derived
---- text/file formating	-------------------------------------------------------
maj in file name, OS dependant
*.cpp: #include "SimpleGL.h" necessary? only need <iostream> ?
void on all accessors ? https://stackoverflow.com/questions/20617067/returning-function-pointer-type
constructor copy, const T& src (et pas const T& randomName)
references: type& varname;
class X { //brace here or next line
if (condition)//bad, braces should englobe code
	return ;
	[...]
public variables without underscore: _varname;
regroup class and inherited class in the same file ? not everything would need that
---- Main features	-------------------------------------------------------
Math::Vector3	make a "linear" mult? Vec3(2,2,2) * Vec3(2,3,4) = Vec3(4,6,8) //or change operator, see properties.hpp
polymorphisme: check for operator overloading with inheritence, and destructors
cam.setParent() *finish Behavior and other fix before continuing this
	working but movement are from worldSpace and not localSpace (need unlock mvt/orientation)
class Object (cf obj3d.hpp, skybox.hpp, program.hpp and derived)
	class Program and derived: see SkyboxPG.hpp
	class skybox : public Object.
		+see SkyboxPG.hpp
motion behavior: see behavior.hpp
	/!\ replace list<ref> to list<ptr> !
	
quaternions: https://www.youtube.com/watch?v=d4EgbgTm0Bg

---- GUI			-------------------------------------------------------
	Qt
---- BUGS			-------------------------------------------------------
glfwSetInputMode(this->_window, GLFW_CURSOR, GLFW_CURSOR_DISABLED);
	/!\ not working since old motion system is removed? memory bug ?

TransformBH		b2 = b1;
	bugs when doing that, is it linked to the list copy ? 
	not really, bug if i do:
		b2.addTarget(empty1);
		b2.removeTarget(rocket1);
	but if we do that, it doesnt bug:
		b2.removeTarget(rocket1);
		b2.addTarget(empty1);
	this may be linked to the fact that lists make copy of the content
		so list of reference are not a thing to do
		https://stackoverflow.com/questions/7707842/stl-containers-with-reference-to-objects